#include <iostream>

using namespace std;

int main()
{
    int bushNum;
    cin >> bushNum; // 灌木数
    for (int i = 1; i <= bushNum; i++)
    {
        int leftDist = i - 1;                                                // 距离最左端有几棵灌木
        int rightDist = bushNum - i;                                         // 距离最右端有几棵灌木
        int maxHeight = leftDist > rightDist ? leftDist * 2 : rightDist * 2; // 把距离最远的一端的灌木数*2就行
        cout << maxHeight << "\n";
    }
    return 0;
}

/*
    爱丽丝是循环往复地在修剪，对于每棵灌木当然是【越久没被修剪，长得越高】。

    很明显，灌木能长多高，和其到两端的距离息息相关，对于每棵灌木得找到距离【最远的一端】

        - 比如 1 2 3 4 5 6 这六棵灌木:

            对于2来说，被修剪后爱丽丝的【修剪路线】可能如下:

            【情况1】
                  修剪: 2->3->4->5->6->5->4->3->2
                2的高度: 1  2  3  4  5  6  7  8

            【情况2】
                  修剪: 2->1->2
                2的高度: 1  2

    为什么要找最远的一端已经不言而喻。

        - SomeBottle 2023.2.11

*/

/*
# [蓝桥杯 2022 省 B] 修建灌木

## 题目描述

爱丽丝要完成一项修剪灌木的工作。

有 $N$ 棵灌木整齐的从左到右排成一排。爱丽丝在每天傍晩会修剪一棵灌木，让灌木的高度变为 $0$ 厘米。爱丽丝修剪灌木的顺序是从最左侧的灌木开始，每天向右修剪一棵灌木。当修剪了最右侧的灌木后，她会调转方向，下一天开始向左修剪灌木。直到修剪了最左的灌木后再次调转方向。然后如此循环往复。

灌木每天从早上到傍晩会长高 $1$ 厘米, 而其余时间不会长高。在第一天的早晨, 所有灌木的高度都是 $0$ 厘米。爱丽丝想知道每棵灌木最高长到多高。

## 输入格式

一个正整数 $N$ ，含义如题面所述。

## 输出格式

输出 $N$ 行, 每行一个整数, 第行表示从左到右第 $i$ 棵树最高能长到多高。

## 样例 #1

### 样例输入 #1

```
3
```

### 样例输出 #1

```
4
2
4
```

## 提示

对于 $30 \%$ 的数据, $N \leq 10$.

对于 $100 \%$ 的数据, $1<N \leq 10000$.

蓝桥杯 2022 省赛 B 组 D 题。
*/
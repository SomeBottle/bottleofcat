#include <cstdio>

using namespace std;

int main()
{
    char frontNums[10], flag; // 储存前面的九位数字, 还有一个标记位
    // 指定宽度输入
    scanf("%1s-%3s-%5s-%c", frontNums, frontNums + 1, frontNums + 4, &flag);
    int calcFlag = 0; // 计算flag
    for (int i = 1; i <= 9; i++)
        calcFlag += (int)(frontNums[i - 1] - '0') * i;
    calcFlag %= 11;
    // 算出来余数为10的话标志位就是X。
    char realFlag = calcFlag == 10 ? 'X' : '0' + calcFlag;
    if (realFlag == flag) // 如果算出来的标记位一致
        printf("Right");
    else // 不一致就输出正确的ISBN号
        printf("%.1s-%.3s-%.5s-%c", frontNums, frontNums + 1, frontNums + 4, realFlag); // 指定精度输出
    return 0;
}

/*
    * 注意，当余数为10时，标志位为X。

    这个题解中值得回顾的是数据的读取和输出。

    读入的时候采用了scanf，而scanf可以指定读入宽度 %[width]s ，因此可以按ISBN格式解析，并将数字字符读入一个字符串中。

    输出的时候用了printf，而printf也可以指定输出精度 %.[width]s，借此可以取出字符串中不同部分的子串以输出。

        - SomeBottle 2023.2.22
*/

/*
# [NOIP2008 普及组] ISBN 号码

## 题目描述

每一本正式出版的图书都有一个 ISBN 号码与之对应，ISBN 码包括 $9$ 位数字、$1$ 位识别码和 $3$ 位分隔符，其规定格式如 `x-xxx-xxxxx-x`，其中符号 `-` 就是分隔符（键盘上的减号），最后一位是识别码，例如 `0-670-82162-4`就是一个标准的 ISBN 码。ISBN 码的首位数字表示书籍的出版语言，例如 $0$ 代表英语；第一个分隔符 `-` 之后的三位数字代表出版社，例如 $670$ 代表维京出版社；第二个分隔符后的五位数字代表该书在该出版社的编号；最后一位为识别码。

识别码的计算方法如下：

首位数字乘以 $1$ 加上次位数字乘以 $2$ ……以此类推，用所得的结果 $ \bmod 11$，所得的余数即为识别码，如果余数为 $10$，则识别码为大写字母 $X$。例如 ISBN 号码 `0-670-82162-4` 中的识别码 $4$ 是这样得到的：对 `067082162` 这 $9$ 个数字，从左至右，分别乘以 $1,2,\dots,9$ 再求和，即 $0\times 1+6\times 2+……+2\times 9=158$，然后取 $158 \bmod 11$ 的结果 $4$ 作为识别码。

你的任务是编写程序判断输入的 ISBN 号码中识别码是否正确，如果正确，则仅输出 `Right`；如果错误，则输出你认为是正确的 ISBN 号码。

## 输入格式

一个字符序列，表示一本书的 ISBN 号码（保证输入符合 ISBN 号码的格式要求）。

## 输出格式

一行，假如输入的 ISBN 号码的识别码正确，那么输出 `Right`，否则，按照规定的格式，输出正确的 ISBN 号码（包括分隔符 `-`）。

## 样例 #1

### 样例输入 #1

```
0-670-82162-4
```

### 样例输出 #1

```
Right
```

## 样例 #2

### 样例输入 #2

```
0-670-82162-0
```

### 样例输出 #2

```
0-670-82162-4
```

## 提示

2008 普及组第一题
*/
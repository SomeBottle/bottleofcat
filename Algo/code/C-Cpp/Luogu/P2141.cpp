#include <cstdio>
#include <cstring>

using namespace std;

int main()
{
    int N;
    scanf("%d", &N);
    bool sums[20001]; // 题目两正整数相加不会超过20000，在这里储存每个和是否出现
    int nums[100];    // 储存N个整数
    memset(sums, 0, sizeof(sums));
    // 读入数据，顺带求个和
    for (int i = 0; i < N; i++)
    {
        scanf("%d", &nums[i]);
        if (i > 0)
        {
            // 将当前数字和之前读入的所有数值都求一次和，然后将和作为下标访问sums，用sums标记【每个和是否出现】
            for (int j = i - 1; j >= 0; j--)
                sums[nums[i] + nums[j]] = true;
        }
    }
    // 扫描一遍序列，判断每个序列中的数字【是否作为和出现】即可
    int cnt = 0;
    for (int i = 0; i < N; i++)
    {
        if (sums[nums[i]])
            cnt++;
    }
    printf("%d", cnt);
    return 0;
}

/*
    题目求的是 “其中有多少个数，恰好等于集合中另外两个（不同的）数之和” 。

    可以发现，只需要判断序列中的每个数【是否作为某两数之和】出现即可，另外：

        - 题目中的数字均为正整数，且每个正整数最大值为 10000，因此两个正整数相加的最大值为 20000。

        - 我完全可以用一个包含 20001 个元素（从 0 到 20000）的数组对【某个数是否作为两数之和出现】进行标记。

    因此我的做法是，在读入数据时将【当前读入的数字】分别和【前面读入的所有数字相加】得到和，每得到一个和，就将其作为下标来随机访问【标记数组 sums】以进行标记（标记为 true）。

    最后扫描一遍数字序列，将数字作为下标来访问【标记数组 sums】，统计作为和而出现的数字的数量即可。

        - SomeBottle 2023.2.20
*/

/*
# [NOIP2014 普及组] 珠心算测验

## 题目描述

珠心算是一种通过在脑中模拟算盘变化来完成快速运算的一种计算技术。珠心算训练，既能够开发智力，又能够为日常生活带来很多便利，因而在很多学校得到普及。


某学校的珠心算老师采用一种快速考察珠心算加法能力的测验方法。他随机生成一个正整数集合，集合中的数各不相同，然后要求学生回答：其中有多少个数，恰好等于集合中另外两个（不同的）数之和？


最近老师出了一些测验题，请你帮忙求出答案。


(本题目为 2014NOIP 普及 T1)

## 输入格式

共两行，第一行包含一个整数 $n$，表示测试题中给出的正整数个数。


第二行有 $n$ 个正整数，每两个正整数之间用一个空格隔开，表示测试题中给出的正整数。

## 输出格式

一个整数，表示测验题答案。

## 样例 #1

### 样例输入 #1

```
4
1 2 3 4
```

### 样例输出 #1

```
2
```

## 提示

【样例说明】


由 $1+2=3,1+3=4$，故满足测试要求的答案为 $2$。

注意，加数和被加数必须是集合中的两个不同的数。


【数据说明】


对于 $100\%$ 的数据，$3 \leq n \leq 100$，测验题给出的正整数大小不超过 $10,000$。
*/